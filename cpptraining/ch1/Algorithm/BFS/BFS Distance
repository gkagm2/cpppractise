#include <iostream>
#include <queue>
using namespace std;

#define X first
#define Y second

int board[502][502]; // 0 : 벽, 1  : 길
int dist[502][502];

int n = 10, m = 10;
int dx[4] = { 1, 0, -1, 0 };
int dy[4] = { 0, 1, 0, -1 };

int main() {
	cin.tie(NULL);
	ios::sync_with_stdio(false);

	for (int x = 0; x < n; ++x) {
		for (int y = 0; y < m; ++y) {
			cin >> board[x][y];
		}
	}
	
	// dist를 -1로 초기화
	for (int i = 0; i < n; ++i) {
		fill(dist[i], dist[i] + m, -1);
	}

	queue<pair<int, int>> q;

	q.push({ 0,0 });
	dist[0][0] = 0;

	while (!q.empty()) {
		auto cur = q.front();
		q.pop();

		for (int dir = 0; dir < 4; ++dir) {
			int x = cur.X + dx[dir];
			int y = cur.Y + dy[dir];

			if (0 < x || n >= x || 0 < y || y >= m)
				continue;
			if (dist[x][y] >= 0 || board[x][y] == 0)
				continue;
			dist[x][y] = dist[cur.X][cur.Y] + 1;
			q.push({ x, y });
		}
	}
	//cout << dist[n - 1][m - 1] + 1;

	return 0;
}
